{"version":3,"sources":["webpack:///./index.js","webpack:///./js/timer.js"],"names":["interval","timer","document","querySelector","day","hours","min","sec","start","stop","clockface","timerAlexBtnStart","timerAlexBtnStop","setTime","time","days","Math","floor","reset","arr","map","el","textContent","refs","addEventListener","setInterval","x","Date","now","clearInterval","startDate","date","obj","this","count","timerAlex","intervalId","isActive","startTime","updateClockface","currentTime","console","log","deltaTime","timeAlex","pad","mins","value","String","padStart","bind"],"mappings":"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","file":"main.15a7030efd92d67bd7b0.js","sourcesContent":["import './styles.css';\nimport refs from './js/timer.js';\n\n// function //  декларативний підхід //\nlet day = 'Dec 28 2020 00:00:00';\n\nfunction setTime(time) {\n  let days = Math.floor(time / 1000 / 60 / 60 / 24); // повертає дні\n  let hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n  let min = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n  let sec = Math.floor((time % (1000 * 60)) / 1000);\n\n  return { days, hours, min, sec };\n}\n\nfunction myTimer(date) {\n  //  new Date(time) - перетворить в UTC (Unix)\n  //  Date.now() - теперішній час\n  let timeBetween = new Date(date) - Date.now();\n  let x = setTime(timeBetween);\n\n  refs.day.textContent = x.days;\n  refs.hours.textContent = x.hours;\n  refs.min.textContent = x.min;\n  refs.sec.textContent = x.sec;\n}\n\n// add buttons\nlet interval;\nrefs.start.addEventListener('click', () => {\n  interval = setInterval(() => myTimer(day, refs), 1000);\n});\n\nrefs.stop.addEventListener('click', () => {\n  clearInterval(interval);\n  reset(refs.day, refs.hours, refs.min, refs.sec);\n});\n\n// clear days\nfunction reset(...arr) {\n  return arr.map(el => (el.textContent = '00'));\n}\nreset(refs);\n\n// Class об'єктно-орієнтоване програмування\n\nclass Timer {\n  constructor(date, obj) {\n    this.date = date;\n    this.refs = obj;\n  }\n  count() {\n    let x = setTime(new Date(this.date) - Date.now());\n\n    this.refs.day.textContent = x.days;\n    this.refs.hours.textContent = x.hours;\n    this.refs.min.textContent = x.min;\n    this.refs.sec.textContent = x.sec;\n  }\n  start() {\n    interval = setInterval(() => this.count(), 1000);\n  }\n  stop() {\n    const { day, hours, min, sec } = this.refs;\n    clearInterval(interval);\n    reset(day, hours, min, sec);\n  }\n}\nconst timer = new Timer(day, refs);\n\n// by Class\n\nrefs.start.addEventListener('click', () => {\n  timer.start();\n});\n\nrefs.stop.addEventListener('click', () => {\n  timer.stop();\n});\n\nfunction elapsedSeconds(startDate, endDate) {\n  let date = new Date(endDate) - Date.now(startDate);\n  //console.log(date);\n}\nelapsedSeconds('Dec 21 2020', 'Dec 22 2020');\n\n// timer Alex R.\n\nconst timerAlex = {\n  intervalId: null,\n  isActive: false,\n  start() {\n    if (this.isActive) {\n      return;\n    }\n    const startTime = Date.now();\n    updateClockface(0);\n    this.intervalId = setInterval(() => {\n      const currentTime = Date.now();\n      console.log('startTime: ', startTime);\n      console.log('currentTime: ', currentTime);\n\n      const deltaTime = currentTime - startTime;\n      console.log('deltaTime: ', deltaTime);\n      updateClockface(deltaTime);\n    }, 1000);\n  },\n  stop() {\n    clearInterval(this.intervalId);\n    this.intervalId = null;\n    this.isActive = false;\n    updateClockface(0);\n  },\n};\n\nfunction updateClockface(timeAlex) {\n  const hours = pad(\n    Math.floor((timeAlex % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n  );\n  const mins = pad(Math.floor((timeAlex % (1000 * 60 * 60)) / (1000 * 60)));\n  const sec = pad(Math.floor((timeAlex % (1000 * 60)) / 1000));\n  refs.clockface.textContent = `${hours}:${mins}:${sec}`;\n}\n\nfunction pad(value) {\n  return String(value).padStart(2, '0'); // якщо довжина менше двох символів додай нуль\n}\n\n// доступ до кнопок //\n\nrefs.timerAlexBtnStart.addEventListener(\n  'click',\n  timerAlex.start.bind(timerAlex),\n);\nrefs.timerAlexBtnStop.addEventListener('click', timerAlex.stop.bind(timerAlex));\n","export default {\n  timer: document.querySelector('timer-wrap'),\n  day: document.querySelector('.dayContent'),\n  hours: document.querySelector('.hoursContent'),\n  min: document.querySelector('.minContent'),\n  sec: document.querySelector('.secContent'),\n  start: document.querySelector('.start'),\n  stop: document.querySelector('.stop'),\n  clockface: document.querySelector('.js-clockface'),\n  timerAlexBtnStart: document.querySelector('.timerAlexBtnStart'),\n  timerAlexBtnStop: document.querySelector('.timerAlexBtnStop'),\n};\n"],"sourceRoot":""}